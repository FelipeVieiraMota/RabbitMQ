version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - order-management-network

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy  # <--- Ensures RabbitMQ is ready
    ports:
      - "8081:8081"
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SERVER_PORT: 8081
    networks:
      - order-management-network

  delivery-service:
    build:
      context: ./delivery-service
      dockerfile: Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy  # <--- Ensures RabbitMQ is ready
      order-service:
        condition: service_started  # Optional: Ensures order-service starts first
    ports:
      - "8082:8082"
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SERVER_PORT: 8082
    networks:
      - order-management-network

networks:
  order-management-network:
    driver: bridge